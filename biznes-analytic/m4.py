"""
Завдання 4.
4. Поняття циклічних процесів: умови виконання циклів, умови зацикленості программи,
переривання циклів, вкладені цикли, нескінчені цикли. Приклад програми із вкладеними
циклами.
"""

""" 
Цикл програми — це серія кроків, які ваша програма повторює, доки не буде досягнуто умови кінця файлу.
Залежно від специфікацій, які ви кодуєте, програма може використовувати 
або не використовувати кожен крок у циклі.
Ітерація - один крок циклу
"""

"""  
Умови виконання циклів задаються після назви циклу (for, while), після умови йде ддвокрапку ті тіло циклу із табуляцією
для кожного виду циклів можна використовувати свої особбливі умови зв'язані із функціями
наприклад цикл "for" часто використовують із оператором "in", функцією "range" та "len"
Приклад:
for i in range(len(list)):
    умова
що означає: доки і - поступове число у зоні довжини заданого списку
"""

"""  
Переривання циклів
оператор "break" дозволяє завершити цикл на заданому етапі
Приклад:
for i in range(len(list)):
    if list[i] == 1:
        break
        return i
ця программа проходиться по списку чисел та поступово перевіряє елементи у списку
при кожній ітерації виконується умова, яка перевіряє чи число у даній ітерації дорівнює одиниці
якщо так, то ми завершуємо цикл та повертаємо індекс елемента що дорівнює одиниці
"""

"""
Нескінчені цикли часто використовуються у програмах із графічним інтерфейсом, іграх,
із умовою наприклад при нажатті на кнопку "q" программа завершиться.

щоб створити безкінечний цикл нам необхідна умова яка ніколи не виконається
у пайтоні це можна зробити наступним чином:

while True:

while 1:

n = -1
while n > 0:
"""
# Приклад программи із вкладеними циклами:

from rich import print
matrix = [[2, 6, 10], [3, 1, 5], [0, 4, 9]]
# У нас є 2D матриця, потрібно вивести її елементи через кому

number_string = "" # Створюємо стрічку у яку будемо додавати числа 

for i in range(len(matrix)): # проходимося по кількості масивів у головному масиві
    for j in range(len(matrix[i])): # проходимося по масиву всередині маьриці
        number_string += f"{matrix[i][j]}, " # додаємо число із двовимірного масиву, із кожною ітерацією це нове число

print(f"[bold blue]{number_string[:-2]}[/bold blue]")  # виводимо результат
